public class twoLines{
    public twoLines(){
        System.out.println("Enter data:");
        Double[]data=new Double[]{Double.parseDouble(new java.util.Scanner(System.in).nextLine()),Double.parseDouble(new java.util.Scanner(System.in).nextLine()),Double.parseDouble(new java.util.Scanner(System.in).nextLine()),Double.parseDouble(new java.util.Scanner(System.in).nextLine()),};
        System.out.println("x1="+String.valueOf((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0])))+"x2="+(((Math.pow(data[1]+(data[0]*((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0])))),2))+((4*data[0]*data[3])/((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0]))))<0)?String.valueOf((-(data[1]+(data[0]*((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0]))))))/(2*data[0])+"+"+String.valueOf(Math.sqrt((Math.pow(data[1]+(data[0]*((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0])))),2))+((4*data[0]*data[3])/((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0]))))*-1)/(2*data[0]))+"i"):(String.valueOf(((-(data[1]+(data[0]*((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0]))))))+Math.sqrt((Math.pow(data[1]+(data[0]*((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0])))),2))+((4*data[0]*data[3])/((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0]))))))/(2*data[0]))))+",x3="+(((Math.pow(data[1]+(data[0]*((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0])))),2))+((4*data[0]*data[3])/((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0]))))<0)?String.valueOf((-(data[1]+(data[0]*((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0]))))))/(2*data[0])+"-"+String.valueOf(Math.sqrt((Math.pow(data[1]+(data[0]*((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0])))),2))+((4*data[0]*data[3])/((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0]))))*-1)/(2*data[0]))+"i"):(String.valueOf((-(data[1]+(data[0]*((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0])))))-Math.sqrt((Math.pow(data[1]+(data[0]*((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0])))),2))+((4*data[0]*data[3])/((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))!=0?Math.cbrt(((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))+Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3))))+Math.cbrt((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0])))-Math.sqrt(Math.pow((((data[1]*data[2])/(6*Math.pow(data[0],2)))-((Math.pow(data[1],3))/(27*Math.pow(data[0],3)))-(data[3]/(2*data[0]))),2)+Math.pow((data[2]/(3*data[0])-(Math.pow(data[1],2)/(9*Math.pow(data[0],2)))),3)))-(data[1]/(3*data[0])):-(data[1]/(3*data[0]))))))/(2*data[0])))));
    }
}
